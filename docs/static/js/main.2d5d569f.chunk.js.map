{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","length","cats","type","value","onChange","target","prototypes","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_large","username","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","setcategories","ReactDOM","render","document","getElementById"],"mappings":"oNAGMA,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,YAEnB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAS,IACpBP,GAAY,SAAAQ,GAAI,OAAMN,GAAN,mBAAqBM,OACrCL,EAAc,MAKlB,SACE,uBACIM,KAAK,OACLC,MAAQR,EACRS,SAlBgB,SAACN,GACvBF,EAAcE,EAAEO,OAAOF,aAsB/BX,EAAYc,WAAY,CACpBb,YAAcc,IAAUC,KAAKC,YAElBjB,Q,+BChCFkB,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,4DACJ,mCACTC,EAFa,iDAEmCC,UAAUH,GAF7C,6BACJ,oCADI,SAGKI,MAAMF,GAHX,cAGbG,EAHa,gBAIIA,EAAUC,OAJd,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,gBAAgBZ,IAChCa,SAAUL,EAAIK,aAXC,kBAeZP,GAfY,4CAAH,sDCWLQ,EAVK,SAAC,GAAqB,EAApBL,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAE7B,OACI,sBAAKe,UAAU,8CAAf,UACI,qBAAKC,IAAMhB,EAAMiB,IAAKP,IACtB,4BAAKA,QCaFQ,EAhBC,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SACjB,ECF0B,SAACA,GAC3B,MAA0BjB,mBAAS,CACjCwB,KAAM,GACNc,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACRzB,EAAQC,GAAUyB,MAAK,SAACC,GACtBH,EAAS,CACPhB,KAAMmB,EACNL,SAAS,SAGZ,CAACrB,IAEGsB,EDb2BK,CAAa3B,GAAjCa,EAAd,EAAQN,KAAcc,EAAtB,EAAsBA,QAEtB,OACE,qCACE,oBAAIJ,UAAU,wCAAd,SAAuDjB,IACtDqB,GAAW,mBAAGJ,UAAU,mCAAb,2BACZ,qBAAKA,UAAU,YAAf,SACGJ,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEwBjBiB,EAjCM,WAGjB,MAAoC7C,mBAAS,CAAC,gBAA9C,mBAAO8C,EAAP,KAAmBC,EAAnB,KAQA,OACI,qCACI,8CAEA,cAAC,EAAD,CAAahD,YAAcgD,IAE3B,uBAEA,6BAEQD,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCrBlC+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2d5d569f.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from \"prop-types\";\n\nconst AddCategory = ({ setCategory}) => {\n\n    const [inputValue, setInputValue] = useState('')\n\n    const handleInputChange = (e) =>{\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) =>{\n        e.preventDefault();\n        //setCategory([...categories, inputValue])\n        if( inputValue.length > 2){\n            setCategory(cats => [ inputValue, ...cats]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n          <input \n              type=\"text\"\n              value={ inputValue }\n              onChange={handleInputChange}\n          /> \n        </form>\n    )\n}\nAddCategory.prototypes ={\n    setCategory : PropTypes.func.isRequired\n}\nexport default AddCategory;\n","\nexport const getGifs = async ( category ) => {\n    const apiKey = \"zdp8ejpp4HjngoQYT3ZVk87Nx5jJ6kHT\";\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${apiKey}`;\n    const respuesta = await fetch(url);\n    const { data } = await respuesta.json();\n\n    const gifs = data.map((img) => {\n      return {\n        id: img.id,\n        title: img.title,\n        url: img.images.downsized_large.url,\n        username: img.username,\n      };\n    });\n\n    return gifs;\n  };","import React from 'react'\n\nconst GifGridItem = ({id, title, url}) => {\n    //console.log(id, title, url)\n    return (\n        <div className='card animate__animated animate__backInRight'>\n            <img src={ url } alt={title} />\n            <p>{ title }</p>\n        </div>\n    )\n}\n\nexport default GifGridItem;\n","import React from \"react\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport GifGridItem from \"./GifGridItem\";\n\nconst GifGrid = ({ category }) => {\n  const { data: images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeInLeft\">{category}</h3>\n      {loading && <p className=\"animate__animated animate__flash\">Cargando.....</p>}\n      <div className=\"card-grid\">\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default GifGrid;\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((imgs) => {\n      setState({\n        data: imgs,\n        loading: false,\n      });\n    });\n  }, [category]);\n\n  return state; // {data: [], loading: true}\n};\n","import React, { useState } from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () => {\n    \n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\n    const [categories, setcategories] = useState(['Dragon Ball'])\n\n    /* const hadleAdd = ()=>{\n        //setcategories([...categories, 'Caballeros del zodiaco']);\n        setcategories(cats => [...cats, 'Caballeros del Zodiaco']);\n    } */\n\n\n    return(\n        <>\n            <h2>GifExpertApp</h2>\n\n            <AddCategory setCategory={ setcategories } />\n\n            <hr />\n            \n            <ol>\n                {\n                    categories.map(category =>(\n                        <GifGrid \n                            key={ category }\n                            category={ category }\n                        />\n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}